{"version":3,"sources":["firebase.js","contexts/ThemeContext.js","contexts/ChannelContext.js","components/OptionsPanel/sun.svg","components/OptionsPanel/moon.svg","components/OptionsPanel/OptionsPanel.js","contexts/AuthContext.js","components/SidePanel/settings-icon.svg","components/SidePanel/settings-dark-mode.svg","components/SidePanel/user-icon.svg","components/SidePanel/logout-icon.svg","components/SidePanel/UserPanel.js","components/SidePanel/arrow-down.svg","components/SidePanel/hashtag.svg","components/SidePanel/Starred.js","components/SidePanel/hashtag-dark.svg","components/SidePanel/add-icon.svg","components/SidePanel/add-dark-mode.svg","components/SidePanel/Channels.js","components/SidePanel/DirectMessages.js","components/chat-icon.svg","components/SidePanel/SidePanel.js","components/Messages/galery.svg","components/Messages/MediaModal.js","components/Messages/clip.svg","components/Messages/clip-dark-mode.svg","components/Messages/send-message.svg","components/Messages/emoji.svg","components/Messages/MessagesForm.js","components/Messages/Message.js","components/Messages/Typing.js","components/Messages/Skeleton.js","components/Messages/search.svg","components/Messages/search-dark-mode.svg","components/Messages/exit.svg","components/Messages/exit-dark-mode.svg","components/Messages/star.svg","components/Messages/star-clicked.svg","components/Messages/Messages.js","components/MetaPanel/MetaPanel.js","components/App.js","components/ThemeProvider.js","components/Auth/Login.js","components/Auth/Register.js","components/Spinner.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","ThemeContext","createContext","ThemeContextProvider","children","useState","localStorage","getItem","darkMode","setDarkMode","useEffect","setItem","Provider","value","ChannelContext","ChannelContextProvider","currentChannel","setCurrentChannel","privateChannel","setPrivateChannel","activeChannel","setActiveChannel","OptionsPanel","useContext","className","onClick","prevMode","src","sunIcon","alt","moonIcon","AuthContext","AuthContextProvider","currentUser","setCurrentUser","loading","setLoading","setUser","user","clearUser","UserPanel","avatarFile","useRef","displayDropdown","setDisplayDropdown","newAvatarImage","setNewAvatarImage","uploadedAvatarImage","setUploadedAvatarImage","storage","ref","storageRef","auth","userRef","database","usersRef","contentType","metadata","child","uid","put","then","snap","getDownloadURL","downloadURL","updateProfile","photoURL","console","log","catch","err","update","avatar","displayName","prevState","title","darkModeSettingsIcon","settingsIcon","current","click","userIcon","onChange","event","file","target","files","type","accept","style","display","signOut","logoutIcon","Starred","starredChannels","setStarredChannels","userId","on","starredChannel","id","key","val","prevValues","channelToRemove","filter","channel","off","arrowDownIcon","length","channelElements","map","changeChannel","name","hashtagIcon","displayChannels","Channels","channels","setChannels","channelName","channelDetails","channelInfo","setChannelInfo","displayAddChannel","setDisplayAddChannel","channelsRef","messagesRef","typingRef","setChannel","notifications","setNotifications","currentSnap","setCurrentSnap","closeAddChannelWindow","handleChange","prevInfo","clearNotifications","index","findIndex","notification","updatedNotifications","total","lastKnownTotal","count","getNotificationCount","setTimeout","forEach","loadedChannels","push","addListeners","channelId","currentChannelId","lastTotal","numChildren","handleNotifications","darkModeAddIcon","addIcon","remove","darkModeHashtagIcon","placeholder","preventDefault","isFormValid","newChannel","details","createdBy","addChannel","DirectMessages","users","setUsers","connectedRef","presenceRef","addStatusToUser","connected","updatedUsers","reduce","acc","concat","channelData","currentUserId","getChannelId","currentUserUid","loadedUsers","set","onDisconnect","userElements","avatarPhoto","status","displayUsers","SidePanel","chatIcon","MediaModal","displayMedia","uploadFile","mediaFile","setFile","authorizedExtensions","filename","includes","mime","lookup","sendFile","mediaIcon","newFile","MessagesForm","setMessages","setBlockScrollToBottom","getMessagesRef","message","setMessage","setDisplayMedia","uploadState","setUploadState","uploadTask","setUploadTask","setPercentUploaded","emojiPicker","setEmojiPicker","messageInput","createMessage","fileUrl","newMessage","timestamp","ServerValue","TIMESTAMP","actualPercentUploaded","Math","round","bytesTransferred","totalBytes","snapshot","downloadUrl","pathToUpload","cancel","addMessageListener","disabled","darkModeUploadMediaIcon","uploadMediaIcon","filePath","uuidv4","onKeyDown","prevValue","emojiIcon","onSelect","emoji","replace","x","emojiIndex","emojis","unicode","native","colonToUnicode","colons","focus","theme","sendIcon","Message","isImage","hasOwnProperty","data-timestamp","image","content","moment","format","Typing","Skeleton","Messages","privateMessagesRef","messages","messagesLoading","setMessagesLoading","lastMessage","messagesList","numOfUsers","setNumOfUsers","displaySearchTab","setDisplaySearchTab","searchMessage","setSearchMessage","matchingMessages","setMatchingMessages","blockScrollToBottom","isChannelStarred","setChannelStarred","typingUsers","setTypingUsers","listeners","setListeners","removeListeners","listener","addToListeners","newListener","prevListeners","closeSearchTab","scrollIntoView","behavior","prevMessages","newTypingUsers","addTypingListeners","once","data","prevStarred","Object","keys","addUserStarsListener","uniqueUsers","countUniqueUsers","searchString","regex","RegExp","newMatchingMessages","test","searchMatchingMessages","clickedStarIcon","starIcon","darkModeSearchIcon","searchIcon","displayMessages","alignItems","marginBottom","displayTypingUsers","onSubmit","e","darkModeExitIcon","exitIcon","messageIndex","item","getAttribute","block","classList","contains","add","scrollToMessage","displayMatchingMessages","MetaPanel","App","ThemeProvider","Login","email","password","errorMessage","setErrorMessage","addErrorClassTo","errorFields","document","querySelectorAll","field","isFieldEmpty","addErrorClassToEmptyFields","isValidEmail","signInWithEmailAndPassword","signedInUser","to","Register","username","passwordConfirmation","createUserWithEmailAndPassword","createdUser","randomColor","slice","saveUser","Spinner","RootWithAuth","withRouter","history","onAuthStateChanged","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.88d29978.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyCUpv01zIUn0iva6jJ-6NkCVbaSFxwaoQo\",\r\n  authDomain: \"slack-app-cc624.firebaseapp.com\",\r\n  databaseURL: \"https://slack-app-cc624.firebaseio.com\",\r\n  projectId: \"slack-app-cc624\",\r\n  storageBucket: \"slack-app-cc624.appspot.com\",\r\n  messagingSenderId: \"43530332645\",\r\n  appId: \"1:43530332645:web:8b1697523b9015b73c270c\",\r\n  measurementId: \"G-GYE5XRHWQT\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport default firebase;\r\n","import React, { createContext, useState, useEffect } from \"react\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nfunction ThemeContextProvider({ children }) {\r\n  const [darkMode, setDarkMode] = useState(\r\n    (localStorage.getItem(\"darkMode\") === \"true\" ? true : false) || false\r\n  );\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"darkMode\", darkMode);\r\n  }, [darkMode]);\r\n\r\n  return (\r\n    <ThemeContext.Provider value={{ darkMode, setDarkMode }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ThemeContextProvider;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const ChannelContext = createContext();\r\n\r\nfunction ChannelContextProvider({ children }) {\r\n  const [currentChannel, setCurrentChannel] = useState(null);\r\n  const [privateChannel, setPrivateChannel] = useState(false);\r\n  const [activeChannel, setActiveChannel] = useState(\"\");\r\n\r\n  return (\r\n    <ChannelContext.Provider\r\n      value={{\r\n        setCurrentChannel,\r\n        currentChannel,\r\n        privateChannel,\r\n        setPrivateChannel,\r\n        activeChannel,\r\n        setActiveChannel\r\n      }}\r\n    >\r\n      {children}\r\n    </ChannelContext.Provider>\r\n  );\r\n}\r\n\r\nexport default ChannelContextProvider;\r\n","export default __webpack_public_path__ + \"static/media/sun.7d1e1b01.svg\";","export default __webpack_public_path__ + \"static/media/moon.628d1de5.svg\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { ThemeContext } from '../../contexts/ThemeContext';\r\n\r\nimport \"./OptionsPanel.css\";\r\nimport sunIcon from './sun.svg';\r\nimport moonIcon from './moon.svg';\r\n\r\nfunction OptionsPanel() {\r\n  const { darkMode, setDarkMode } = useContext(ThemeContext);\r\n\r\n  function toggleTheme() {\r\n    setDarkMode(prevMode => !prevMode);\r\n  }\r\n\r\n  return (\r\n    <div className=\"OptionsPanel\">\r\n      <div className=\"OptionsPanel-theme\" onClick={toggleTheme}>\r\n        {darkMode ? <img className=\"light-mode-icon\" src={sunIcon} alt=\"Light\" /> : <img className=\"dark-mode-icon\" src={moonIcon} alt=\"Dark\" />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OptionsPanel;\r\n","import React, { createContext, useState } from \"react\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nfunction AuthContextProvider({ children }) {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  function setUser(user) {\r\n    setCurrentUser(user);\r\n    setLoading(false);\r\n  }\r\n\r\n  function clearUser(user) {\r\n    setCurrentUser(null);\r\n    setLoading(false);\r\n  }\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, loading, setUser, clearUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport default AuthContextProvider;\r\n","export default __webpack_public_path__ + \"static/media/settings-icon.e5ff19e1.svg\";","export default __webpack_public_path__ + \"static/media/settings-dark-mode.c7cec136.svg\";","export default __webpack_public_path__ + \"static/media/user-icon.2ab6e483.svg\";","export default __webpack_public_path__ + \"static/media/logout-icon.b382cc9b.svg\";","import React, { useContext, useRef, useState, useEffect } from \"react\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport firebase from \"../../firebase\";\r\n\r\nimport settingsIcon from \"./settings-icon.svg\";\r\nimport darkModeSettingsIcon from \"./settings-dark-mode.svg\";\r\nimport userIcon from \"./user-icon.svg\";\r\nimport logoutIcon from \"./logout-icon.svg\";\r\n\r\nfunction UserPanel() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const avatarFile = useRef(null);\r\n  const [displayDropdown, setDisplayDropdown] = useState(false);\r\n  const [newAvatarImage, setNewAvatarImage] = useState(\"\");\r\n  const [uploadedAvatarImage, setUploadedAvatarImage] = useState(\"\");\r\n  const [storageRef, setStorageRef] = useState(firebase.storage().ref());\r\n  const [userRef, setUserRef] = useState(firebase.auth().currentUser);\r\n  const [usersRef, setUsersRef] = useState(firebase.database().ref(\"users\"));\r\n  const [metadata, setMetadata] = useState({ contentType: \"image/jpeg\" });\r\n\r\n  useEffect(() => {\r\n    // on new avatar image update\r\n    if (newAvatarImage !== \"\") {\r\n      uploadImage();\r\n    }\r\n  }, [newAvatarImage]);\r\n\r\n  useEffect(() => {\r\n    if (uploadedAvatarImage !== \"\") {\r\n      changeAvatar();\r\n    }\r\n  }, [uploadedAvatarImage]);\r\n\r\n  function toggleDropdown() {\r\n    setDisplayDropdown(prevState => !prevState);\r\n  }\r\n\r\n  function closeDropdown() {\r\n    setDisplayDropdown(false);\r\n  }\r\n\r\n  function handleSignOut() {\r\n    // this produces a change in the state of the auth\r\n    // the user is cleared from the app and refirected to the login page\r\n    firebase\r\n      .auth()\r\n      .signOut()\r\n      .then(() => {\r\n        console.log(\"signed out\");\r\n      });\r\n  }\r\n\r\n  function changeAvatar() {\r\n    userRef\r\n      .updateProfile({\r\n        photoURL: uploadedAvatarImage\r\n      })\r\n      .then(() => {\r\n        console.log(\"photo updated\");\r\n        closeDropdown();\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n\r\n    usersRef\r\n      .child(currentUser.uid)\r\n      .update({ avatar: uploadedAvatarImage })\r\n      .then(() => {\r\n        console.log(\"user avatar updated\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function uploadImage() {\r\n    storageRef\r\n      .child(`avatars/users/${userRef.uid}`)\r\n      .put(newAvatarImage, metadata)\r\n      .then(snap => {\r\n        snap.ref.getDownloadURL().then(downloadURL => {\r\n          // once the image is in the storage, keep that new value on state\r\n          setUploadedAvatarImage(downloadURL);\r\n          // next step on useEffect when this is completed\r\n        });\r\n      });\r\n  }\r\n\r\n  function handleAvatar() {\r\n    avatarFile.current.click();\r\n  }\r\n\r\n  function handleChange(event) {\r\n    const file = event.target.files[0];\r\n\r\n    if (file) {\r\n      setNewAvatarImage(file);\r\n      // file will upload on useEffect, listening for changes in this image\r\n    }\r\n  }\r\n\r\n  return currentUser ? (\r\n    <div className=\"UserPanel\">\r\n      <div className=\"UserPanel-image\">\r\n        <img src={currentUser.photoURL} alt={currentUser.displayName} />\r\n      </div>\r\n      <div className=\"UserPanel-info\">\r\n        <div className=\"UserPanel-info__name\">{currentUser.displayName}</div>\r\n        <div\r\n          onClick={toggleDropdown}\r\n          className=\"UserPanel-info__settings\"\r\n          title=\"Settings\"\r\n        >\r\n          <img\r\n            src={darkMode ? darkModeSettingsIcon : settingsIcon}\r\n            alt=\"settings\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <ul\r\n        className={`UserPanel-settings-dropdown ${displayDropdown && \"open\"}`}\r\n      >\r\n        <li onClick={handleAvatar} className=\"settings-change-avatar\">\r\n          <img className=\"settings-icon\" src={userIcon} alt=\"\" />\r\n          <input\r\n            onChange={handleChange}\r\n            type=\"file\"\r\n            ref={avatarFile}\r\n            accept=\".jpg, .jpeg, .png\"\r\n            style={{ display: \"none\" }}\r\n          />\r\n          Change Avatar\r\n        </li>\r\n        <li onClick={handleSignOut} className=\"settings-signout\">\r\n          <img className=\"settings-icon\" src={logoutIcon} alt=\"\" />\r\n          Sign Out\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  ) : (\r\n    <div />\r\n  );\r\n}\r\n\r\nexport default UserPanel;\r\n","export default __webpack_public_path__ + \"static/media/arrow-down.d54be5f6.svg\";","export default __webpack_public_path__ + \"static/media/hashtag.48a50352.svg\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nimport arrowDownIcon from \"./arrow-down.svg\";\r\nimport hashtagIcon from \"./hashtag.svg\";\r\n\r\nfunction Starred() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const {\r\n    setCurrentChannel,\r\n    setPrivateChannel,\r\n    setActiveChannel,\r\n    activeChannel\r\n  } = useContext(ChannelContext);\r\n  const [usersRef, setUsersRef] = useState(firebase.database().ref(\"users\"));\r\n  const [starredChannels, setStarredChannels] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      addListeners(currentUser.uid);\r\n    }\r\n\r\n    return () => {\r\n      if (currentUser) {\r\n        removeListener();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  function removeListener() {\r\n    usersRef.child(`${currentUser.uid}/starred`).off();\r\n  }\r\n\r\n  function addListeners(userId) {\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_added\", snap => {\r\n        const starredChannel = { id: snap.key, ...snap.val() };\r\n        setStarredChannels(prevValues => [...prevValues, starredChannel]);\r\n      });\r\n\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .on(\"child_removed\", snap => {\r\n        const channelToRemove = { id: snap.key, ...snap.val() };\r\n        const filteredChannels = starredChannels.filter(channel => {\r\n          return channel.id !== channelToRemove.id;\r\n        });\r\n        setStarredChannels(prevValues =>\r\n          prevValues.filter(channel => channel.id !== channelToRemove.id)\r\n        );\r\n      });\r\n  }\r\n\r\n  function changeChannel(channel) {\r\n    setActiveChannel(channel.id);\r\n    // put the channel on global state\r\n    setCurrentChannel(channel);\r\n    setPrivateChannel(false);\r\n  }\r\n\r\n  function displayChannels(starredChannels) {\r\n    if (starredChannels.length > 0) {\r\n      const channelElements = starredChannels.map(channel => (\r\n        <li\r\n          className={`channel-item ${channel.id === activeChannel && \"active\"}`}\r\n          key={channel.id}\r\n          onClick={() => changeChannel(channel)}\r\n          title={channel.name}\r\n        >\r\n          <img src={hashtagIcon} alt=\"#\" />\r\n          {channel.name}\r\n        </li>\r\n      ));\r\n\r\n      return <ul className=\"Channel-items\">{channelElements}</ul>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Channels-component\">\r\n      <div className=\"Channels\">\r\n        <div className=\"Channels-name\">\r\n          <img src={arrowDownIcon} alt=\"\" />\r\n          starred\r\n          <span className=\"Channel-counter\">{starredChannels.length}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {displayChannels(starredChannels)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Starred;\r\n","export default __webpack_public_path__ + \"static/media/hashtag-dark.e3908581.svg\";","export default __webpack_public_path__ + \"static/media/add-icon.2b701364.svg\";","export default __webpack_public_path__ + \"static/media/add-dark-mode.0a8c723f.svg\";","import React, { useState, useContext, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\n\r\nimport hashtagIcon from \"./hashtag.svg\";\r\nimport darkModeHashtagIcon from \"./hashtag-dark.svg\";\r\nimport addIcon from \"./add-icon.svg\";\r\nimport darkModeAddIcon from \"./add-dark-mode.svg\";\r\nimport arrowDownIcon from \"./arrow-down.svg\";\r\n\r\nfunction Channels() {\r\n  const {\r\n    currentChannel,\r\n    setCurrentChannel,\r\n    setPrivateChannel,\r\n    setActiveChannel,\r\n    activeChannel\r\n  } = useContext(ChannelContext);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const [channels, setChannels] = useState([]);\r\n  const [channelInfo, setChannelInfo] = useState({\r\n    channelName: \"\",\r\n    channelDetails: \"\"\r\n  });\r\n  const [displayAddChannel, setDisplayAddChannel] = useState(false);\r\n  // add reference to the collection of channels in the db\r\n  const [channelsRef, setChannelsRef] = useState(\r\n    firebase.database().ref(\"channels\")\r\n  );\r\n  const [messagesRef, setMessagesRef] = useState(\r\n    firebase.database().ref(\"messages\")\r\n  );\r\n  const [typingRef, setTypingRef] = useState(firebase.database().ref(\"typing\"));\r\n  const [channel, setChannel] = useState(null);\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [currentSnap, setCurrentSnap] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // excecute when component did mount\r\n    addListeners();\r\n\r\n    // axecute when component will unmount\r\n    return () => {\r\n      removeListeners();\r\n    };\r\n  }, []);\r\n\r\n  // set first channel when the channels are updated\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setFirstChannel();\r\n    }, 1000);\r\n  }, [channels]);\r\n\r\n  useEffect(() => {\r\n    if (channel && currentSnap) {\r\n      addNotificationListener(currentSnap.key);\r\n    }\r\n  }, [channel]);\r\n\r\n  function setFirstChannel() {\r\n    if (channels.length > 0) {\r\n      setActiveChannel(channels[0].id);\r\n      setCurrentChannel(channels[0]);\r\n      setChannel(channels[0]);\r\n    }\r\n  }\r\n\r\n  function addListeners() {\r\n    let loadedChannels = [];\r\n    channelsRef.on(\"child_added\", snap => {\r\n      setCurrentSnap(snap);\r\n      loadedChannels.push(snap.val());\r\n      setChannels(loadedChannels);\r\n      // this is asynchronous, so we need to set the first channel in the useEffect hook\r\n      // listening for changes in the channels state\r\n    });\r\n  }\r\n\r\n  function addNotificationListener(channelId) {\r\n    messagesRef.child(channelId).on(\"child_added\", snap => {\r\n      if (channel) {\r\n        handleNotifications(channelId, channel.id, notifications, snap);\r\n      }\r\n    });\r\n  }\r\n\r\n  function handleNotifications(\r\n    channelId,\r\n    currentChannelId,\r\n    notifications,\r\n    snap\r\n  ) {\r\n    let lastTotal = 0;\r\n    let index = notifications.findIndex(\r\n      notification => notification.id === channelId\r\n    );\r\n\r\n    if (index !== -1) {\r\n      if (channelId !== currentChannelId) {\r\n        lastTotal = notifications[index].total;\r\n\r\n        if (snap.numChildren() - lastTotal > 0) {\r\n          notifications[index].count = snap.numChildren() - lastTotal;\r\n        }\r\n      }\r\n\r\n      notifications[index].lastKnownTotal = snap.numChildren();\r\n    } else {\r\n      notifications.push({\r\n        id: channelId,\r\n        total: snap.numChildren(),\r\n        lastKnownTotal: snap.numChildren(),\r\n        count: 0\r\n      });\r\n    }\r\n\r\n    setNotifications(notifications);\r\n  }\r\n\r\n  function removeListeners() {\r\n    channelsRef.off();\r\n    channels.forEach(channel => {\r\n      messagesRef.child(channel.id).off();\r\n    });\r\n  }\r\n\r\n  function openAddChannelModal() {\r\n    setDisplayAddChannel(true);\r\n  }\r\n\r\n  function closeAddChannelWindow() {\r\n    setDisplayAddChannel(false);\r\n  }\r\n\r\n  function isFormValid({ channelName, channelDetails }) {\r\n    if (channelName === \"\" || channelDetails === \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  function addChannel() {\r\n    // get a unique identifier for the new channel\r\n    const key = channelsRef.push().key;\r\n    const newChannel = {\r\n      id: key,\r\n      name: channelInfo.channelName,\r\n      details: channelInfo.channelDetails,\r\n      createdBy: {\r\n        name: currentUser.displayName,\r\n        avatar: currentUser.photoURL\r\n      }\r\n    };\r\n\r\n    channelsRef\r\n      // set the new channel as a child of the collection\r\n      .child(key)\r\n      .update(newChannel)\r\n      .then(() => {\r\n        closeAddChannelWindow();\r\n        setChannelInfo({ channelName: \"\", channelDetails: \"\" });\r\n        console.log(\"channel added\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (isFormValid(channelInfo)) {\r\n      addChannel();\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setChannelInfo(prevInfo => {\r\n      return {\r\n        ...prevInfo,\r\n        [event.target.name]: event.target.value\r\n      };\r\n    });\r\n  }\r\n\r\n  function clearNotifications() {\r\n    let index = notifications.findIndex(\r\n      notification => notification.id === channel.id\r\n    );\r\n\r\n    if (index !== -1) {\r\n      let updatedNotifications = [...notifications];\r\n      updatedNotifications[index].total = notifications[index].lastKnownTotal;\r\n      updatedNotifications[index].count = 0;\r\n      setNotifications(updatedNotifications);\r\n    }\r\n  }\r\n\r\n  function changeChannel(channel) {\r\n    // remove typing user when change channel\r\n    typingRef\r\n      .child(currentChannel.id)\r\n      .child(currentUser.uid)\r\n      .remove();\r\n\r\n    setActiveChannel(channel.id);\r\n    clearNotifications();\r\n    // put the channel on global state\r\n    setCurrentChannel(channel);\r\n    setPrivateChannel(false);\r\n    setChannel(channel);\r\n  }\r\n\r\n  function getNotificationCount(channel) {\r\n    setTimeout(() => {\r\n      let count = 0;\r\n      notifications.forEach(notification => {\r\n        if (notification.id === channel.id) {\r\n          count = notification.count;\r\n        }\r\n      });\r\n\r\n      if (count > 0) return count;\r\n    }, 1);\r\n  }\r\n\r\n  function displayChannels(channels) {\r\n    if (channels.length > 0) {\r\n      const channelElements = channels.map(channel => (\r\n        <li\r\n          className={`channel-item ${channel.id === activeChannel && \"active\"}`}\r\n          key={channel.id}\r\n          onClick={() => changeChannel(channel)}\r\n          title={channel.name}\r\n        >\r\n          {getNotificationCount(channel) && (\r\n            <div className=\"notification\">{getNotificationCount(channel)}</div>\r\n          )}\r\n          <img src={darkMode ? darkModeHashtagIcon : hashtagIcon} alt=\"#\" />\r\n          {channel.name}\r\n        </li>\r\n      ));\r\n\r\n      return <ul className=\"Channel-items\">{channelElements}</ul>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Channels-component\">\r\n      <div className=\"Channels\">\r\n        <div className=\"Channels-name\">\r\n          <img src={arrowDownIcon} alt=\"\" />\r\n          channels\r\n          <span className=\"Channel-counter\">{channels.length}</span>\r\n        </div>\r\n        <div\r\n          onClick={openAddChannelModal}\r\n          className=\"Channels-add\"\r\n          title=\"Add Channel\"\r\n        >\r\n          <img src={darkMode ? darkModeAddIcon : addIcon} alt=\"+\" />\r\n        </div>\r\n      </div>\r\n\r\n      {/* channel items */}\r\n      {displayChannels(channels)}\r\n\r\n      <div className={`add-channel-window ${displayAddChannel && \"open\"}`}>\r\n        <form className=\"add-channel-form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"channelName\"\r\n            placeholder=\"Name\"\r\n            onChange={handleChange}\r\n            value={channelInfo.channelName}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"channelDetails\"\r\n            placeholder=\"Description\"\r\n            onChange={handleChange}\r\n            value={channelInfo.channelDetails}\r\n          />\r\n          <div className=\"add-channel-buttons\">\r\n            <button onClick={handleSubmit} className=\"btn add-btn\">\r\n              Add\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={closeAddChannelWindow}\r\n              className=\"btn cancel-btn\"\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Channels;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\n\r\nimport arrowDownIcon from \"./arrow-down.svg\";\r\n\r\nfunction DirectMessages() {\r\n  const {\r\n    setCurrentChannel,\r\n    setPrivateChannel,\r\n    setActiveChannel,\r\n    activeChannel\r\n  } = useContext(ChannelContext);\r\n  const { currentUser } = useContext(AuthContext);\r\n  const [users, setUsers] = useState([]);\r\n  const [usersRef, setUsersRef] = useState(firebase.database().ref(\"users\"));\r\n  // ref to the connected users in the database\r\n  const [connectedRef, setConnectedRef] = useState(\r\n    firebase.database().ref(\".info/connected\")\r\n  );\r\n  const [presenceRef, setPresenceRef] = useState(\r\n    firebase.database().ref(\"presence\")\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      addListeners(currentUser.uid);\r\n    }\r\n\r\n    return () => {\r\n      removeListeners();\r\n    };\r\n  }, []);\r\n\r\n  function removeListeners() {\r\n    usersRef.off();\r\n    presenceRef.off();\r\n    connectedRef.off();\r\n  }\r\n\r\n  function addListeners(currentUserUid) {\r\n    const loadedUsers = [];\r\n    usersRef.on(\"child_added\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        let user = snap.val();\r\n        user[\"uid\"] = snap.key;\r\n        user[\"status\"] = \"offline\";\r\n        loadedUsers.push(user);\r\n        setUsers(loadedUsers);\r\n      }\r\n    });\r\n\r\n    connectedRef.on(\"value\", snap => {\r\n      if (snap.val() === true) {\r\n        const ref = presenceRef.child(currentUserUid);\r\n        ref.set(true);\r\n        ref.onDisconnect().remove(err => {\r\n          if (err !== null) {\r\n            console.log(err);\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    presenceRef.on(\"child_added\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        addStatusToUser(snap.key);\r\n      }\r\n    });\r\n\r\n    presenceRef.on(\"child_removed\", snap => {\r\n      if (currentUserUid !== snap.key) {\r\n        addStatusToUser(snap.key, false);\r\n      }\r\n    });\r\n  }\r\n\r\n  function addStatusToUser(userId, connected = true) {\r\n    const updatedUsers = users.reduce((acc, user) => {\r\n      if (user.uid === userId) {\r\n        user[\"status\"] = `${connected ? \"online\" : \"offline\"}`;\r\n      }\r\n\r\n      return acc.concat(user);\r\n    }, []);\r\n    setUsers(updatedUsers);\r\n  }\r\n\r\n  function getChannelId(userId) {\r\n    const currentUserId = currentUser.uid;\r\n    // create the path to the channel\r\n    return userId < currentUserId\r\n      ? `${userId}/${currentUserId}`\r\n      : `${currentUserId}/${userId}`;\r\n  }\r\n\r\n  // put the channel on global state\r\n  function changeChannel(user) {\r\n    const channelId = getChannelId(user.uid);\r\n    const channelData = {\r\n      id: channelId,\r\n      name: user.name\r\n    };\r\n    setCurrentChannel(channelData);\r\n    setPrivateChannel(true);\r\n    setActiveChannel(user.uid);\r\n  }\r\n\r\n  function displayUsers(users) {\r\n    if (users && users.length > 0) {\r\n      const userElements = users.map(user => (\r\n        <li\r\n          className={`channel-item ${user.uid === activeChannel && \"active\"}`}\r\n          key={user.uid}\r\n          onClick={() => changeChannel(user)}\r\n          title={user.name}\r\n        >\r\n          <img className=\"avatar-img\" src={user.avatarPhoto} alt=\"@\" />\r\n          {user.name}\r\n          <div className={`status-circle ${user.status}`} />\r\n        </li>\r\n      ));\r\n\r\n      return <ul className=\"Channel-items\">{userElements}</ul>;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Channels-component\">\r\n      <div className=\"Channels\">\r\n        <div className=\"Channels-name\">\r\n          <img src={arrowDownIcon} alt=\"\" />\r\n          direct messages\r\n          <span className=\"Channel-counter\">{users && users.length}</span>\r\n        </div>\r\n      </div>\r\n\r\n      {displayUsers(users)}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DirectMessages;\r\n","export default __webpack_public_path__ + \"static/media/chat-icon.ecd61459.svg\";","import React from \"react\";\r\nimport UserPanel from \"./UserPanel\";\r\nimport Starred from \"./Starred\";\r\nimport Channels from \"./Channels\";\r\nimport DirectMessages from \"./DirectMessages\";\r\nimport \"./SidePanel.css\";\r\n\r\nimport chatIcon from \"../chat-icon.svg\";\r\n\r\nfunction SidePanel() {\r\n  return (\r\n    <div className=\"SidePanel\">\r\n      <h1 className=\"SidePanel-title\">\r\n        <span className=\"title__icon\">\r\n          <img src={chatIcon} alt=\"\" />\r\n        </span>{\" \"}\r\n        chattier\r\n      </h1>\r\n      <UserPanel />\r\n      <Starred />\r\n      <Channels />\r\n      <DirectMessages />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidePanel;\r\n","export default __webpack_public_path__ + \"static/media/galery.a5b10b5b.svg\";","import React, { useState, useRef, useEffect } from \"react\";\r\nimport mime from \"mime-types\";\r\n\r\nimport mediaIcon from \"./galery.svg\";\r\n\r\nfunction MediaModal({ displayMedia, uploadFile }) {\r\n  const mediaFile = useRef(null);\r\n  const [file, setFile] = useState(null);\r\n  const [authorizedExtensions, setAuthorizedExtensions] = useState([\r\n    \"image/jpeg\",\r\n    \"image/jpg\",\r\n    \"image/png\"\r\n  ]);\r\n\r\n  // excecute when the file state is updated\r\n  useEffect(() => {\r\n    sendFile();\r\n  }, [file]);\r\n\r\n  function handleClick() {\r\n    mediaFile.current.click();\r\n  }\r\n\r\n  function isAuthorized(filename) {\r\n    // check if it is an authorized type with mime\r\n    return authorizedExtensions.includes(mime.lookup(filename));\r\n  }\r\n\r\n  function clearFile() {\r\n    setFile(null);\r\n  }\r\n\r\n  function sendFile() {\r\n    if (file !== null) {\r\n      if (isAuthorized(file.name)) {\r\n        const metadata = { contentType: mime.lookup(file.name) };\r\n        // upload file to the parent component\r\n        uploadFile(file, metadata);\r\n        clearFile();\r\n      }\r\n    }\r\n  }\r\n\r\n  function addFile(event) {\r\n    // event target files is an array of all the selected files\r\n    const newFile = event.target.files[0];\r\n\r\n    if (newFile) {\r\n      // set the new file in the state\r\n      setFile(newFile);\r\n      // since the update of the state is asynchronous, the sendFile function will be\r\n      // excecuted in the useEffect hook, looking for changes in the file state\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div\r\n      onClick={handleClick}\r\n      className={`MediaModal ${displayMedia && \"open\"}`}\r\n    >\r\n      <img src={mediaIcon} alt=\"Upload Media\" title=\"Add a photo\" />\r\n      <input\r\n        onChange={addFile}\r\n        ref={mediaFile}\r\n        type=\"file\"\r\n        accept=\".jpg, .jpeg, .png\"\r\n        style={{ display: \"none\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MediaModal;\r\n","export default __webpack_public_path__ + \"static/media/clip.499e8353.svg\";","export default __webpack_public_path__ + \"static/media/clip-dark-mode.8ed188b3.svg\";","export default __webpack_public_path__ + \"static/media/send-message.7b480b15.svg\";","export default __webpack_public_path__ + \"static/media/emoji.45631553.svg\";","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport firebase from \"../../firebase\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport MediaModal from \"./MediaModal\";\r\nimport { Picker, emojiIndex } from \"emoji-mart\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\n\r\nimport uploadMediaIcon from \"./clip.svg\";\r\nimport darkModeUploadMediaIcon from \"./clip-dark-mode.svg\";\r\nimport sendIcon from \"./send-message.svg\";\r\nimport emojiIcon from \"./emoji.svg\";\r\n\r\nfunction MessagesForm({\r\n  messagesRef,\r\n  setMessages,\r\n  setBlockScrollToBottom,\r\n  getMessagesRef\r\n}) {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { currentChannel, privateChannel } = useContext(ChannelContext);\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [displayMedia, setDisplayMedia] = useState(false);\r\n  const [uploadState, setUploadState] = useState(\"\");\r\n  const [uploadTask, setUploadTask] = useState(null);\r\n  const [storageRef, setStorageRef] = useState(firebase.storage().ref());\r\n  const [typingRef, setTypingRef] = useState(firebase.database().ref(\"typing\"));\r\n  const [percentUploaded, setPercentUploaded] = useState(0);\r\n  const [emojiPicker, setEmojiPicker] = useState(false);\r\n\r\n  // input reference\r\n  const messageInput = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // on uploadTask change\r\n    if (uploadTask !== null) {\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        snap => {\r\n          const actualPercentUploaded = Math.round(\r\n            (snap.bytesTransferred / snap.totalBytes) * 100\r\n          );\r\n          setPercentUploaded(actualPercentUploaded);\r\n        },\r\n        // callbacks after listening for state changed\r\n        err => {\r\n          console.log(err);\r\n          setUploadState(\"error\");\r\n          setUploadTask(null);\r\n        },\r\n        () => {\r\n          uploadTask.snapshot.ref\r\n            .getDownloadURL()\r\n            .then(downloadUrl => {\r\n              sendFileMessage(downloadUrl, getMessagesRef(), currentChannel.id);\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              setUploadState(\"error\");\r\n              setUploadTask(null);\r\n            });\r\n        }\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      if (uploadTask !== null) {\r\n        uploadTask.cancel();\r\n        setUploadTask(null);\r\n      }\r\n    };\r\n  }, [uploadTask]);\r\n\r\n  useEffect(() => {\r\n    if (uploadState === \"done\") {\r\n      addMessageListener(currentChannel.id);\r\n    }\r\n  }, [uploadState]);\r\n\r\n  useEffect(() => {\r\n    setMessage(\"\");\r\n  }, [currentChannel]);\r\n\r\n  function sendFileMessage(fileUrl, ref, pathToUpload) {\r\n    ref\r\n      .child(pathToUpload)\r\n      .push()\r\n      .set(createMessage(fileUrl))\r\n      .then(() => {\r\n        setUploadState(\"done\");\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setMessage(event.target.value);\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    // wait for messages to update\r\n    // this is necessary since messages state update after the event key down is fired\r\n    setTimeout(() => {\r\n      // if the user is typing, set the reference\r\n      // if not, remove it\r\n      if (event.target.value) {\r\n        typingRef\r\n          .child(currentChannel.id)\r\n          .child(currentUser.uid)\r\n          .set(currentUser.displayName);\r\n      } else {\r\n        typingRef\r\n          .child(currentChannel.id)\r\n          .child(currentUser.uid)\r\n          .remove();\r\n      }\r\n    }, 1);\r\n  }\r\n\r\n  function handleTogglePicker() {\r\n    setEmojiPicker(prevValue => !prevValue);\r\n  }\r\n\r\n  function handleAddEmoji(emoji) {\r\n    const oldMessage = message;\r\n    const newMessage = colonToUnicode(`${oldMessage} ${emoji.colons}`);\r\n    setMessage(newMessage);\r\n    setEmojiPicker(false);\r\n    // focus on input after the emoji is picked\r\n    messageInput.current.focus();\r\n  }\r\n\r\n  function colonToUnicode(message) {\r\n    return message.replace(/:[A-Za-z0-9_+-]+:/g, x => {\r\n      x = x.replace(/:/g, \"\");\r\n      let emoji = emojiIndex.emojis[x];\r\n      if (typeof emoji !== \"undefined\") {\r\n        let unicode = emoji.native;\r\n        if (typeof unicode !== \"undefined\") {\r\n          return unicode;\r\n        }\r\n      }\r\n      x = \":\" + x + \":\";\r\n      return x;\r\n    });\r\n  }\r\n\r\n  // function addMessageListener(channelId) {\r\n  //   messagesRef.child(channelId).on(\"child_added\", snap => {\r\n  //     setMessages(prevMessages => {\r\n  //       if (!prevMessages.includes(snap.val())) {\r\n  //         return prevMessages.concat(snap.val());\r\n  //       }\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  function createMessage(fileUrl = null) {\r\n    const newMessage = {\r\n      timestamp: firebase.database.ServerValue.TIMESTAMP,\r\n      user: {\r\n        id: currentUser.uid,\r\n        name: currentUser.displayName,\r\n        avatar: currentUser.photoURL\r\n      }\r\n    };\r\n\r\n    // condition to differetiate btw image and text\r\n    if (fileUrl !== null) {\r\n      newMessage[\"image\"] = fileUrl;\r\n    } else {\r\n      newMessage[\"content\"] = message;\r\n    }\r\n\r\n    return newMessage;\r\n  }\r\n\r\n  function sendMessage(event) {\r\n    event.preventDefault();\r\n    setBlockScrollToBottom(false);\r\n\r\n    if (message !== \"\") {\r\n      // set the message in the collection based on the id of the channel\r\n      getMessagesRef()\r\n        .child(currentChannel.id)\r\n        .push()\r\n        .set(createMessage())\r\n        .then(() => {\r\n          setMessage(\"\");\r\n          // addMessageListener(currentChannel.id);\r\n\r\n          // remove typing user after sending the message\r\n          typingRef\r\n            .child(currentChannel.id)\r\n            .child(currentUser.uid)\r\n            .remove();\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }\r\n\r\n  function toggleMediaModal() {\r\n    if (displayMedia) {\r\n      setDisplayMedia(false);\r\n    } else {\r\n      setDisplayMedia(true);\r\n    }\r\n  }\r\n\r\n  function getPath() {\r\n    if (privateChannel) {\r\n      return `chat/private/${currentChannel.id}`;\r\n    } else {\r\n      return `chat/public/${currentChannel.id}`;\r\n    }\r\n  }\r\n\r\n  function uploadFile(file, metadata) {\r\n    // file to firebase storage for images\r\n    // generate an aleatory id for the image name\r\n    const filePath = `${getPath()}/${uuidv4()}.jpg`;\r\n\r\n    setUploadState(\"uploading\");\r\n    setUploadTask(storageRef.child(filePath).put(file, metadata));\r\n    // when this is finished, excecute the useEffect that listens for uploadTask\r\n  }\r\n\r\n  return (\r\n    <form className=\"MessagesForm\">\r\n      <button\r\n        disabled={uploadState === \"uploading\"}\r\n        className=\"MessagesForm-upload-media\"\r\n        onClick={toggleMediaModal}\r\n        type=\"button\"\r\n        title=\"Upload Media\"\r\n      >\r\n        <img\r\n          src={darkMode ? darkModeUploadMediaIcon : uploadMediaIcon}\r\n          alt=\"Upload Media\"\r\n        />\r\n        <MediaModal displayMedia={displayMedia} uploadFile={uploadFile} />\r\n      </button>\r\n      <div className=\"MessagesForm-input-container\">\r\n        <input\r\n          className=\"MessagesForm-input\"\r\n          ref={messageInput}\r\n          type=\"text\"\r\n          placeholder=\"Enter your message here\"\r\n          onChange={handleChange}\r\n          onKeyDown={handleKeyDown}\r\n          value={message}\r\n        />\r\n        <button\r\n          className=\"MessagesForm-emoji-picker\"\r\n          onClick={handleTogglePicker}\r\n          title=\"Pick an emoji\"\r\n          type=\"button\"\r\n        >\r\n          <img src={emojiIcon} />\r\n        </button>\r\n        {emojiPicker && (\r\n          <div className=\"emoji-picker\">\r\n            <Picker\r\n              title=\"Pick your emoji\"\r\n              onSelect={handleAddEmoji}\r\n              theme={darkMode ? \"dark\" : \"light\"}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <button\r\n        className={`MessagesForm-send ${message === \"\" && \"disabled\"}`}\r\n        onClick={sendMessage}\r\n        title=\"Send Message\"\r\n      >\r\n        Send <img src={sendIcon} alt=\"\" />\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default MessagesForm;\r\n","import React, { useContext } from \"react\";\r\nimport moment from \"moment\";\r\n\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\n\r\nfunction Message({ message }) {\r\n  const { currentUser } = useContext(AuthContext);\r\n\r\n  function isImage(message) {\r\n    return (\r\n      message.hasOwnProperty(\"image\") && !message.hasOwnProperty(\"content\")\r\n    );\r\n  }\r\n\r\n  return currentUser ? (\r\n    <li\r\n      className={`Message ${message.user.id === currentUser.uid &&\r\n        \"self-message\"} ${isImage(message) && \"image-wrapper\"}`}\r\n      data-timestamp={message.timestamp}\r\n    >\r\n      <div className=\"Message__avatar\">\r\n        <img src={message.user.avatar} alt={message.user.name} />\r\n      </div>\r\n      {isImage(message) ? (\r\n        <img className=\"Message__image\" src={message.image} alt=\"\" />\r\n      ) : (\r\n        <div className=\"Message__content\">{message.content}</div>\r\n      )}\r\n      <div className=\"Message__time\">\r\n        {moment(message.timestamp).format(\"HH:mm\")}\r\n      </div>\r\n    </li>\r\n  ) : (\r\n    \"\"\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\n\r\nfunction Typing() {\r\n  return (\r\n    <div className=\"Typing\">\r\n      <div className=\"Typing__dot\" />\r\n      <div className=\"Typing__dot\" />\r\n      <div className=\"Typing__dot\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typing;\r\n","import React from \"react\";\r\n\r\nfunction Skeleton({ className }) {\r\n  return (\r\n    <div className={`Skeleton ${className}`}>\r\n      <div className=\"Skeleton__avatar\" />\r\n      <div className=\"Skeleton-details\">\r\n        <div className=\"Skeleton-details__text\" />\r\n        <div className=\"Skeleton-details__text shorter-text\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Skeleton;\r\n","export default __webpack_public_path__ + \"static/media/search.52e43bda.svg\";","export default __webpack_public_path__ + \"static/media/search-dark-mode.fde230f1.svg\";","export default __webpack_public_path__ + \"static/media/exit.8869ec30.svg\";","export default __webpack_public_path__ + \"static/media/exit-dark-mode.de360789.svg\";","export default __webpack_public_path__ + \"static/media/star.9cb3dd8e.svg\";","export default __webpack_public_path__ + \"static/media/star-clicked.2462f0e7.svg\";","import React, { useState, useEffect, useContext, useRef } from \"react\";\r\nimport moment from \"moment\";\r\nimport firebase from \"../../firebase\";\r\nimport MessagesForm from \"./MessagesForm\";\r\nimport { AuthContext } from \"../../contexts/AuthContext\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\r\nimport Message from \"./Message\";\r\nimport Typing from \"./Typing\";\r\nimport Skeleton from \"./Skeleton\";\r\n\r\nimport \"./Messages.css\";\r\nimport searchIcon from \"./search.svg\";\r\nimport darkModeSearchIcon from \"./search-dark-mode.svg\";\r\nimport exitIcon from \"./exit.svg\";\r\nimport darkModeExitIcon from \"./exit-dark-mode.svg\";\r\nimport starIcon from \"./star.svg\";\r\nimport clickedStarIcon from \"./star-clicked.svg\";\r\n\r\nfunction Messages() {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const { currentChannel, privateChannel } = useContext(ChannelContext);\r\n  const { darkMode } = useContext(ThemeContext);\r\n  const [messagesRef, setMessagesRef] = useState(\r\n    firebase.database().ref(\"messages\")\r\n  );\r\n  const [privateMessagesRef, setPrivateMessagesRef] = useState(\r\n    firebase.database().ref(\"privateMessages\")\r\n  );\r\n  const [usersRef, setUsersRef] = useState(firebase.database().ref(\"users\"));\r\n  const [typingRef, setTypingRef] = useState(firebase.database().ref(\"typing\"));\r\n  const [connectedRef, setConnectedRef] = useState(\r\n    firebase.database().ref(\".info/connected\")\r\n  );\r\n  const [messages, setMessages] = useState([]);\r\n  const [messagesLoading, setMessagesLoading] = useState(true);\r\n  const lastMessage = useRef(null);\r\n  const messagesList = useRef(null);\r\n  const [numOfUsers, setNumOfUsers] = useState(0);\r\n  const [displaySearchTab, setDisplaySearchTab] = useState(false);\r\n  // search tab for match messages\r\n  const [searchMessage, setSearchMessage] = useState(\"\");\r\n  const [matchingMessages, setMatchingMessages] = useState([]);\r\n  // block scrollToBottom when scrollToMessage is excecuted\r\n  const [blockScrollToBottom, setBlockScrollToBottom] = useState(false);\r\n  const [isChannelStarred, setChannelStarred] = useState(false);\r\n  const [typingUsers, setTypingUsers] = useState([]);\r\n  const [listeners, setListeners] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (!blockScrollToBottom) {\r\n      scrollToBottom();\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentChannel && currentUser) {\r\n      // when channel is changed, get the messages from the database\r\n      removeListeners();\r\n      addListeners(currentChannel.id);\r\n      addUserStarsListener(currentChannel.id, currentUser.uid);\r\n    }\r\n\r\n    return () => {\r\n      removeListeners();\r\n      connectedRef.off();\r\n    };\r\n  }, [currentChannel]);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      countUniqueUsers(messages);\r\n      setMessagesLoading(false);\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (searchMessage !== \"\") {\r\n      searchMatchingMessages(searchMessage);\r\n    } else {\r\n      setMatchingMessages([]);\r\n    }\r\n  }, [searchMessage]);\r\n\r\n  useEffect(() => {\r\n    if (currentUser && currentChannel) {\r\n      starChannel();\r\n    }\r\n  }, [isChannelStarred]);\r\n\r\n  function removeListeners() {\r\n    listeners.forEach(listener => {\r\n      listener.ref.child(listener.id).off(listener.event);\r\n    });\r\n  }\r\n\r\n  function addToListeners(id, ref, event) {\r\n    const index = listeners.findIndex(listener => {\r\n      return (\r\n        listener.id === id && listener.ref === ref && listener.event === event\r\n      );\r\n    });\r\n\r\n    // if the index doesn't exist create it\r\n    if (index === -1) {\r\n      const newListener = { id, ref, event };\r\n      setListeners(prevListeners => prevListeners.concat(newListener));\r\n    }\r\n  }\r\n\r\n  function addListeners(channelId) {\r\n    addMessageListener(channelId);\r\n    addTypingListeners(channelId);\r\n  }\r\n\r\n  function addTypingListeners(channelId) {\r\n    let newTypingUsers = [];\r\n    typingRef.child(channelId).on(\"child_added\", snap => {\r\n      // if the current typing user is other than the current user\r\n      if (snap.key !== currentUser.uid) {\r\n        newTypingUsers = newTypingUsers.concat({\r\n          id: snap.key,\r\n          name: snap.val()\r\n        });\r\n        setTypingUsers(newTypingUsers);\r\n      }\r\n    });\r\n    addToListeners(channelId, typingRef, \"child_added\");\r\n\r\n    typingRef.child(channelId).on(\"child_removed\", snap => {\r\n      const index = newTypingUsers.findIndex(user => user.id === snap.key);\r\n\r\n      if (index !== -1) {\r\n        newTypingUsers = newTypingUsers.filter(user => user.id !== snap.key);\r\n\r\n        setTypingUsers(newTypingUsers);\r\n      }\r\n    });\r\n    addToListeners(channelId, typingRef, \"child_removed\");\r\n\r\n    connectedRef.on(\"value\", snap => {\r\n      if (snap.val() === true) {\r\n        typingRef\r\n          .child(channelId)\r\n          .child(currentUser.uid)\r\n          .onDisconnect()\r\n          .remove(err => {\r\n            if (err !== null) {\r\n              console.log(err);\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  function addMessageListener(channelId) {\r\n    // set messages to an empty array for the cases where there are no messages to display\r\n    // If this is not done, the channels without messages display the last messages in state\r\n    // this happened because of the method child(), if there's no such child, the method returns anything\r\n    setMessages([]);\r\n    const ref = getMessagesRef();\r\n    ref.child(channelId).on(\"child_added\", snap => {\r\n      setMessages(prevMessages => prevMessages.concat(snap.val()));\r\n    });\r\n\r\n    addToListeners(channelId, ref, \"child_added\");\r\n  }\r\n\r\n  function addUserStarsListener(channelId, userId) {\r\n    usersRef\r\n      .child(userId)\r\n      .child(\"starred\")\r\n      .once(\"value\")\r\n      .then(data => {\r\n        if (data.val() !== null) {\r\n          // array with the keys on data.val()\r\n          const channelIds = Object.keys(data.val());\r\n          const prevStarred = channelIds.includes(channelId);\r\n          setChannelStarred(prevStarred);\r\n        }\r\n      });\r\n  }\r\n\r\n  function getMessagesRef() {\r\n    return privateChannel ? privateMessagesRef : messagesRef;\r\n  }\r\n\r\n  function displayMessages(messages) {\r\n    if (messages.length > 0) {\r\n      return messages.map(message => (\r\n        <Message key={message.timestamp} message={message} />\r\n      ));\r\n    }\r\n  }\r\n\r\n  function scrollToBottom() {\r\n    lastMessage.current.scrollIntoView({ behavior: \"smooth\" });\r\n  }\r\n\r\n  function countUniqueUsers(messages) {\r\n    const uniqueUsers = messages.reduce((acc, message) => {\r\n      if (!acc.includes(message.user.name)) {\r\n        acc.push(message.user.name);\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    setNumOfUsers(uniqueUsers.length);\r\n  }\r\n\r\n  function openSearchTab() {\r\n    setDisplaySearchTab(true);\r\n  }\r\n\r\n  function closeSearchTab() {\r\n    setDisplaySearchTab(false);\r\n    setSearchMessage(\"\");\r\n  }\r\n\r\n  function handleStar() {\r\n    setChannelStarred(prevValue => !prevValue);\r\n    // next function is excecuted when this state is updated\r\n  }\r\n\r\n  function starChannel() {\r\n    if (isChannelStarred) {\r\n      usersRef.child(`${currentUser.uid}/starred`).update({\r\n        [currentChannel.id]: {\r\n          name: currentChannel.name,\r\n          details: currentChannel.details,\r\n          createdBy: {\r\n            name: currentChannel.createdBy.name,\r\n            avatar: currentChannel.createdBy.avatar\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      usersRef\r\n        .child(`${currentUser.uid}/starred`)\r\n        .child(currentChannel.id)\r\n        .remove(err => {\r\n          if (err !== null) {\r\n            console.log(err);\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    setSearchMessage(event.target.value);\r\n    // search for matches on useEffect\r\n  }\r\n\r\n  function searchMatchingMessages(searchString) {\r\n    // case insensitive\r\n    const regex = new RegExp(searchString, \"i\");\r\n    // array of matching messages\r\n    const newMatchingMessages = messages.reduce((acc, message) => {\r\n      // if not an image\r\n      if (message.content) {\r\n        if (regex.test(message.content)) {\r\n          acc.push(message);\r\n        }\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    setMatchingMessages(newMatchingMessages);\r\n  }\r\n\r\n  function scrollToMessage(id) {\r\n    // HTMLCollection to array and find item\r\n    let messageItems = [...messagesList.current.children];\r\n    let messageIndex = messageItems.findIndex(\r\n      item => item.getAttribute(\"data-timestamp\") == id\r\n    );\r\n    let message = messagesList.current.children.item(messageIndex);\r\n\r\n    // scroll message into view\r\n    setBlockScrollToBottom(true); // block the scroll to bottom action\r\n    message.scrollIntoView({ block: \"center\" });\r\n    if (message.classList.contains(\"self-message\")) {\r\n      message.classList.add(\"self-message-searched\");\r\n      setTimeout(() => {\r\n        message.classList.remove(\"self-message-searched\");\r\n      }, 2000);\r\n    } else {\r\n      message.classList.add(\"message-searched\");\r\n      setTimeout(() => {\r\n        message.classList.remove(\"message-searched\");\r\n      }, 2000);\r\n    }\r\n    closeSearchTab();\r\n  }\r\n\r\n  function displayMatchingMessages(messages) {\r\n    return messages.map(message => (\r\n      <li\r\n        onClick={() => scrollToMessage(message.timestamp)}\r\n        key={message.timestamp}\r\n        className=\"search-tab-content-item\"\r\n      >\r\n        <p className=\"search-tab-content-item__mesage\">{message.content}</p>\r\n        <div className=\"search-tab-content-item__date\">\r\n          {moment(message.timestamp).format(\"DD/MM/YY HH:mm\")}\r\n        </div>\r\n      </li>\r\n    ));\r\n  }\r\n\r\n  function displayTypingUsers(users) {\r\n    if (users.length > 0) {\r\n      console.log(\"a user is typing\");\r\n      return users.map(user => (\r\n        <div\r\n          key={user.id}\r\n          style={{\r\n            display: \"flex\",\r\n            alignItems: \"center\",\r\n            marginBottom: \".5rem\"\r\n          }}\r\n        >\r\n          <span className=\"user-typing\">{user.name} is typing</span>\r\n          <Typing />\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n\r\n  function displaySkeleton() {\r\n    return (\r\n      <>\r\n        <Skeleton />\r\n        <Skeleton className=\"Skeleton-self-message\" />\r\n        <Skeleton />\r\n        <Skeleton />\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"Messages\">\r\n      <div className=\"Messages-window\">\r\n        <div className=\"Messages-header\">\r\n          <div className=\"Messages-header-info\">\r\n            <div className=\"Messages-header-info__channel-name\">\r\n              {currentChannel &&\r\n                `${privateChannel ? \"@\" : \"#\"} ${currentChannel.name}`}\r\n              {!privateChannel && (\r\n                <img\r\n                  className=\"channel-name__icon\"\r\n                  onClick={handleStar}\r\n                  src={isChannelStarred ? clickedStarIcon : starIcon}\r\n                  alt=\"&#9734;\"\r\n                />\r\n              )}\r\n            </div>\r\n            {!privateChannel && (\r\n              <div className=\"Messages-header-info__users\">{`${numOfUsers} user${\r\n                numOfUsers !== 1 ? \"s\" : \"\"\r\n              }`}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"Messages-header-search\">\r\n            <button\r\n              onClick={openSearchTab}\r\n              title=\"Search Messages\"\r\n              type=\"button\"\r\n            >\r\n              <img src={darkMode ? darkModeSearchIcon : searchIcon} />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"Messages-content-wrapper\">\r\n          <ul ref={messagesList} className=\"Messages-content\">\r\n            {messagesLoading ? displaySkeleton() : displayMessages(messages)}\r\n            {/* dummy element for scroll to bottom */}\r\n            <div ref={lastMessage} />\r\n            {/* loading animation when user is typing */}\r\n            {displayTypingUsers(typingUsers)}\r\n          </ul>\r\n          <MessagesForm\r\n            messagesRef={messagesRef}\r\n            setMessages={setMessages}\r\n            setBlockScrollToBottom={setBlockScrollToBottom}\r\n            getMessagesRef={getMessagesRef}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={`Messages-search-tab ${displaySearchTab && \"open-tab\"}`}>\r\n        <form\r\n          onSubmit={e => {\r\n            e.preventDefault();\r\n          }}\r\n          className=\"Messages-search-tab-header\"\r\n        >\r\n          <input\r\n            onChange={handleChange}\r\n            value={searchMessage}\r\n            type=\"text\"\r\n            placeholder=\"Search Messages\"\r\n          />\r\n          <button onClick={closeSearchTab} type=\"button\">\r\n            <img src={darkMode ? darkModeExitIcon : exitIcon} alt=\"x\" />\r\n          </button>\r\n        </form>\r\n        <ul className=\"Messages-search-tab-content\">\r\n          {displayMatchingMessages(matchingMessages)}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { ChannelContext } from \"../../contexts/ChannelContext\";\r\nimport \"./MetaPanel.css\";\r\n\r\nfunction MetaPanel() {\r\n  const { currentChannel, privateChannel } = useContext(ChannelContext);\r\n\r\n  return (\r\n    <div className=\"MetaPanel-component\">\r\n      <div className=\"MetaPanel\">\r\n        {!privateChannel && (\r\n          <div className=\"MetaPanel-field\">\r\n            <h5>channel details</h5>\r\n            <p>{currentChannel && currentChannel.details}</p>\r\n          </div>\r\n        )}\r\n        <div className=\"MetaPanel-field\">\r\n          <h5>photos & media</h5>\r\n        </div>\r\n        <div className=\"MetaPanel-field\">\r\n          <h5>attachments</h5>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MetaPanel;\r\n","import React, { useContext, useEffect } from \"react\";\nimport ChannelContextProvider from \"../contexts/ChannelContext\";\nimport { ThemeContext } from \"../contexts/ThemeContext\";\nimport \"./App.css\";\nimport \"./darkTheme.css\";\n\nimport OptionsPanel from \"./OptionsPanel/OptionsPanel\";\nimport SidePanel from \"./SidePanel/SidePanel\";\nimport Messages from \"./Messages/Messages\";\nimport MetaPanel from \"./MetaPanel/MetaPanel\";\n\nfunction App() {\n  const { darkMode } = useContext(ThemeContext);\n\n  return (\n    <div className={`App ${darkMode && \"App--dark\"}`}>\n      <ChannelContextProvider>\n        <SidePanel />\n        <Messages />\n        <div className=\"side-container\">\n          <OptionsPanel />\n          <MetaPanel />\n        </div>\n      </ChannelContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// Component to provide theme context to the App component.\r\n// The App can't wrab the content of the component with the provider directly, because it needs to destructure \r\n// a property from context. That destructuring is made before the component renders, so it takes a propery from\r\n// an undefined context, since the context provider is rendered later in the excecution of the component.\r\n\r\nimport React from 'react';\r\nimport ThemeContextProvider from \"../contexts/ThemeContext\";\r\nimport App from './App';\r\n\r\nfunction ThemeProvider() {\r\n  return (\r\n    <ThemeContextProvider>\r\n      <App />\r\n    </ThemeContextProvider>\r\n  )\r\n}\r\n\r\nexport default ThemeProvider;","import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./auth.css\";\r\nimport chatIcon from '../chat-icon.svg';\r\n\r\nfunction Login() {\r\n  const [user, setUser] = useState({\r\n    email: \"\",\r\n    password: \"\"\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  function isFieldEmpty({ email, password }) {\r\n    if (email.length === 0 || password.length === 0) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function isValidEmail({ email }) {\r\n    let emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  // add error classes to all empty fields\r\n  function addErrorClassToEmptyFields(user) {\r\n    let fields = document.querySelectorAll(\".field\");\r\n\r\n    fields.forEach(field => {\r\n      if (user[field.name] === \"\") {\r\n        field.classList.add(\"login-field-error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // add error classes to specific fields in object\r\n  function addErrorClassTo(errorFields) {\r\n    let fields = document.querySelectorAll(\".field\");\r\n\r\n    fields.forEach(field => {\r\n      if (errorFields.includes(field.name)) {\r\n        field.classList.add(\"login-field-error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function isFormValid() {\r\n    if (isFieldEmpty(user)) {\r\n      setErrorMessage(\"There are empty fields\");\r\n      addErrorClassToEmptyFields(user);\r\n      return false;\r\n    } else if (!isValidEmail(user)) {\r\n      setErrorMessage(\"Invalid email address\");\r\n      addErrorClassTo([\"email\"]);\r\n      return false;\r\n    } else if (user.password.length < 6) {\r\n      setErrorMessage(\"The password must have at least 6 characters\");\r\n      addErrorClassTo([\"password\", \"passwordConfirmation\"]);\r\n      return false;\r\n    } else {\r\n      // valid form\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function handleChange(event) {\r\n    event.target.classList.remove(\"field-error\");\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // starts loading the auth\r\n      setLoading(true);\r\n      firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(user.email, user.password)\r\n        .then(signedInUser => {\r\n          console.log(signedInUser);\r\n          setErrorMessage(\"\");\r\n          setLoading(false);\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          setErrorMessage(err.message);\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login auth-container\">\r\n      <form onSubmit={handleSubmit} className=\"form login-form\">\r\n        <div className=\"form-header\">\r\n          <h1 className=\"SidePanel-title\">\r\n            <span className=\"title__icon\">\r\n              <img src={chatIcon} alt=\"\" />\r\n            </span>{\" \"}\r\n            chattier\r\n          </h1>\r\n          <p>Log In</p>\r\n        </div>\r\n        <div className=\"form-fields\">\r\n          <input\r\n            className=\"field login-field\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            onChange={handleChange}\r\n            value={user.email}\r\n          />\r\n          <input\r\n            className=\"field login-field\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            value={user.password}\r\n          />\r\n          <div className=\"error-message login-error-message\">\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n          <button className=\"btn register-btn\" disabled={loading}>\r\n            {loading ? <div className=\"btn-loader\">Loading...</div> : \"Submit\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"redirect login-redirect\">\r\n          <p>\r\n            Don't have an account? <Link to=\"/register\">Register</Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"../../firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport randomColor from \"randomcolor\";\r\n\r\nimport \"./auth.css\";\r\nimport chatIcon from '../chat-icon.svg';\r\n\r\nfunction Register() {\r\n  const [user, setUser] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    passwordConfirmation: \"\"\r\n  });\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [usersRef, setUsersRef] = useState(firebase.database().ref(\"users\"));\r\n\r\n  function isFieldEmpty({ username, email, password, passwordConfirmation }) {\r\n    if (\r\n      username.length === 0 ||\r\n      email.length === 0 ||\r\n      password.length === 0 ||\r\n      passwordConfirmation === 0\r\n    ) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function isValidEmail({ email }) {\r\n    let emailRegex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/;\r\n\r\n    return emailRegex.test(email);\r\n  }\r\n\r\n  // add error classes to all empty fields\r\n  function addErrorClassToEmptyFields(user) {\r\n    let fields = document.querySelectorAll(\".field\");\r\n\r\n    fields.forEach(field => {\r\n      if (user[field.name] === \"\") {\r\n        field.classList.add(\"field-error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  // add error classes to specific fields in object\r\n  function addErrorClassTo(errorFields) {\r\n    let fields = document.querySelectorAll(\".field\");\r\n\r\n    fields.forEach(field => {\r\n      if (errorFields.includes(field.name)) {\r\n        field.classList.add(\"field-error\");\r\n      }\r\n    });\r\n  }\r\n\r\n  function isFormValid() {\r\n    if (isFieldEmpty(user)) {\r\n      setErrorMessage(\"There are empty fields\");\r\n      addErrorClassToEmptyFields(user);\r\n      return false;\r\n    } else if (!isValidEmail(user)) {\r\n      setErrorMessage(\"Invalid email address\");\r\n      addErrorClassTo([\"email\"]);\r\n      return false;\r\n    } else if (user.password !== user.passwordConfirmation) {\r\n      setErrorMessage(\"The passwords are different\");\r\n      addErrorClassTo([\"password\", \"passwordConfirmation\"]);\r\n      return false;\r\n    } else if (user.password.length < 6) {\r\n      setErrorMessage(\"The password must have at least 6 characters\");\r\n      addErrorClassTo([\"password\", \"passwordConfirmation\"]);\r\n      return false;\r\n    } else {\r\n      // valid form\r\n      return true;\r\n    }\r\n  }\r\n\r\n  function saveUser(createdUser) {\r\n    // create a new document with the id created by firebase in authentication\r\n    // all new documents are created as children of the users collection\r\n    return usersRef.child(createdUser.user.uid).set({\r\n      name: createdUser.user.displayName,\r\n      avatarPhoto: createdUser.user.photoURL\r\n    });\r\n  }\r\n\r\n  function handleChange(event) {\r\n    event.target.classList.remove(\"field-error\");\r\n    setUser({ ...user, [event.target.name]: event.target.value });\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (isFormValid()) {\r\n      // starts loading the auth\r\n      setLoading(true);\r\n      firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(user.email, user.password)\r\n        .then(createdUser => {\r\n          console.log(createdUser);\r\n          setErrorMessage(\"\");\r\n          // add additional information to the user\r\n          createdUser.user\r\n            .updateProfile({\r\n              displayName: user.username,\r\n              photoURL: `https://avatar.oxro.io/avatar.svg?name=${\r\n                user.username\r\n              }&background=${randomColor().slice(1)}&length=1`\r\n            })\r\n            .then(() => {\r\n              // save user in realtime database\r\n              saveUser(createdUser)\r\n                .then(() => {\r\n                  console.log(\"user saved\");\r\n                  setLoading(false);\r\n                })\r\n                .catch(err => {\r\n                  console.log(err);\r\n                  setLoading(false);\r\n                });\r\n            })\r\n            .catch(err => {\r\n              console.log(err);\r\n              setLoading(false);\r\n            });\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n          // case email already in use by another account\r\n          setErrorMessage(err.message);\r\n          // loading finished\r\n          setLoading(false);\r\n        });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Register auth-container\">\r\n      <form onSubmit={handleSubmit} className=\"form register-form\">\r\n        <div className=\"form-header\">\r\n          <h1 className=\"SidePanel-title\">\r\n            <span className=\"title__icon\">\r\n              <img src={chatIcon} alt=\"\" />\r\n            </span>{\" \"}\r\n            chattier\r\n          </h1>\r\n          <p>Register</p>\r\n        </div>\r\n        <div className=\"form-fields\">\r\n          <input\r\n            className=\"field\"\r\n            name=\"username\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            onChange={handleChange}\r\n            value={user.username}\r\n          />\r\n          <input\r\n            className=\"field\"\r\n            name=\"email\"\r\n            type=\"text\"\r\n            placeholder=\"Email Address\"\r\n            onChange={handleChange}\r\n            value={user.email}\r\n          />\r\n          <input\r\n            className=\"field\"\r\n            name=\"password\"\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={handleChange}\r\n            value={user.password}\r\n          />\r\n          <input\r\n            className=\"field\"\r\n            name=\"passwordConfirmation\"\r\n            type=\"password\"\r\n            placeholder=\"Password Confirmation\"\r\n            onChange={handleChange}\r\n            value={user.passwordConfirmation}\r\n          />\r\n          <div className=\"error-message\">\r\n            <p>{errorMessage}</p>\r\n          </div>\r\n          <button className=\"btn register-btn\" disabled={loading}>\r\n            {loading ? <div className=\"btn-loader\">Loading...</div> : \"Submit\"}\r\n          </button>\r\n        </div>\r\n        <div className=\"redirect\">\r\n          <p>\r\n            Already have an account? <Link to=\"/login\">Log In</Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\nimport chatIcon from \"./chat-icon.svg\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <div className=\"loader-container\">\r\n      <h1 className=\"loader-title\">\r\n        <img src={chatIcon} alt=\"\" /> chattier\r\n      </h1>\r\n      <div className=\"loader\">Loading...</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import React, { useEffect, useContext } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  withRouter\n} from \"react-router-dom\";\nimport firebase from \"./firebase\";\n\nimport ThemeProvider from \"./components/ThemeProvider\";\nimport Login from \"./components/Auth/Login\";\nimport Register from \"./components/Auth/Register\";\nimport AuthContextProvider, { AuthContext } from \"./contexts/AuthContext\";\nimport Spinner from \"./components/Spinner\";\nimport \"./index.css\";\n\nfunction Root({ history }) {\n  const { setUser, clearUser, loading } = useContext(AuthContext);\n\n  useEffect(() => {\n    // check if the auth state is changed\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        // put the user data on global state. Now is accessible from all the children components\n        setUser(user);\n        // redirect to home page\n        history.push(\"/\");\n      } else {\n        // log out and clear the user\n        clearUser(user);\n        // redirect to the login page\n        history.push(\"/login\");\n      }\n    });\n  }, []);\n\n  return loading ? (\n    <Spinner />\n  ) : (\n    <Switch>\n      // We can't put the theme provider here because it causes the login and register routes not to mount.\n      // The switch component only nests routes\n      <Route exact path=\"/\" component={ThemeProvider} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/register\" component={Register} />\n    </Switch>\n  );\n}\n\n// HOC to access the history object\nconst RootWithAuth = withRouter(Root);\n\nReactDOM.render(\n  <AuthContextProvider>\n    <Router>\n      <RootWithAuth />\n    </Router>\n  </AuthContextProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}